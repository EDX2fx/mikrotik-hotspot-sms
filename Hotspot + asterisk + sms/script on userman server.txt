# You need install userman packedge from extra packetges and you need create log:
# /system logging action add name=userman target=memory
# /system logging add action=userman topics=manager

# User manager config and user profile limitation
# Profile
# /tool user-manager profile add name=guest name-for-users="" override-shared-users=5 owner=admin price=0 starts-at=logon validity=0s
# Profile limit
# /tool user-manager profile limitation add address-list="" download-limit=0B group-name="" ip-pool="" ip-pool6="" name=guest owner=admin rate-limit-burst-rx=5242880B rate-limit-burst-time-rx=16s rate-limit-burst-time-tx=16s rate-limit-burst-treshold-rx=2097152B rate-limit-burst-treshold-tx=2097152B rate-limit-burst-tx=5242880B rate-limit-min-rx=2097152B rate-limit-min-tx=2097152B rate-limit-priority=8 rate-limit-rx=2097152B rate-limit-tx=2097152B transfer-limit=0B upload-limit=0B uptime-limit=0s
# User template
# /tool user-manager user add customer=admin disabled=no ipv6-dns=:: password=PassWord123 shared-users=5 username=test wireless-enc-algo=none wireless-enc-key="" wireless-psk=""
# Router add to usermanager change ip you router adn password for radius server
# /tool user-manager router add coa-port=1700 customer=admin disabled=no ip-address=10.1.1.1 log=auth-ok,auth-fail,acct-ok,acct-fail name=cpe34 shared-secret=PassWord123 use-coa=no


:local Lines { 0="" }

:local LineI 1

:foreach line in=[/log find buffer=userman message~"Reply-Message = \"user "] do={

  :set ($Lines->"$LineI") [ /log get $line message ]

  :set LineI ($LineI + 1)

}

/system logging action set userman memory-lines=1;

delay 300ms

/system logging action set userman memory-lines=1000;



:foreach key,content in=$Lines do={
 :set ($Lines->"$key") ""

 :do {
#  :put $content;
  :local pos1 [:find $content "<" 0];
#  :put $pos1
  :if ($pos1 != " ") do={ 
   :local uname ""; 
   :local uname7 "";
   :local uname8 "";
   :local uname9 "";
   :local unameD "";
   :local phone ""; 
   :if ([:pick $content ($pos1+1)] = "9") do={ 
    :set uname [:pick $content ($pos1+1) ($pos1+11)];  
#    :put $uname;
    :set uname7 [:put ("7" . {$uname})]
    :set uname8 [:put ("8" . {$uname})]
    :set unameD [:pick $content ($pos1+11)];
#    :put $unameD 
    #SendTest

    :local sendtest true;
    :foreach i in=[/ip fi ad print as-value where list=sendsms] do={
    :if (($i->"address")=$uname7) do={
    :set sendtest false;
#    :put "sendtest=$sendtest";
     }
    }

    :local numberd [:pick $content ($pos1+11)];
    #Add user to user-manager  

    :if ($sendtest=true and $numberd = "d") do={ 

      #Password generation 

    :local date [/system clock get time]; 

    :local hour [:pick $date 0 2]; 

    :local min [:pick $date 3 5]; 

    :local sec [:pick $date 6 8]; 

    :local usernumber [:pick $content ($pos1+5) ($pos1+7)];

#    :put $usernumber;

    :global pass 27394; 

    :set pass ($hour * $min * $sec - $usernumber); 

    :if ($pass <= 0) do={ 

     :set pass 6524;

     }

#    :put $pass;

    :local changepassword [:do {/tool user-manager user set password=$pass number=[find username=$uname]} on-error={}];
    :local timeoutsendsms [:do {/ip firewall address-list add list="sendsms" address="$uname7" timeout="3m"} on-error={}];
    :local sendsms [:do {/tool fetch url="http://cab.websms.ru/http_in5.asp?http_username=USER&http_password=Pass&Phone_list=$uname7&Message=$pass" keep-result=no} on-error={}];
    :local newuser [:do {/tool user-manager user add username=$uname password=$pass customer=admin copy-from=test disabled=no phone=$uname7} on-error={:do {($changepassword&&$timeoutsendsms&&$sendsms)} on-error={}}];

#    :put TRUE

          }
         }
        }
       }
      }

